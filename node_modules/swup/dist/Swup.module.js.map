{"version":3,"file":"Swup.module.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/createHistoryRecord.ts","../src/helpers/updateHistoryRecord.ts","../src/helpers/delegateEvent.ts","../src/helpers/Location.ts","../src/helpers/matchPath.ts","../src/modules/Cache.ts","../src/utils/index.ts","../src/modules/Classes.ts","../src/modules/Visit.ts","../src/modules/Hooks.ts","../src/modules/getAnchorElement.ts","../src/modules/awaitAnimations.ts","../src/modules/navigate.ts","../src/modules/fetchPage.ts","../src/modules/animatePageOut.ts","../src/modules/replaceContent.ts","../src/modules/scrollToContent.ts","../src/modules/animatePageIn.ts","../src/modules/renderPage.ts","../src/modules/plugins.ts","../src/modules/resolveUrl.ts","../src/Swup.ts"],"sourcesContent":["/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (\n\turl: string,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.pushState(data, '', url);\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (\n\turl: string | null = null,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data = {\n\t\t...history.state,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.replaceState(data, '', url);\n};\n","import delegate, { DelegateEventHandler, DelegateOptions, EventType } from 'delegate-it';\nimport { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${path}\":\\n${error}`);\n\t}\n};\n","import Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: Record<string, any>) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear');\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n","/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: any): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof obj.then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\nexport function runAsPromise(func: Function, args: any[] = []): Promise<any> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @returns The offset height, just here so it doesn't get optimized away by the JS engine\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement) {\n\telement = element || document.body;\n\treturn element?.offsetHeight;\n}\n\n/** Escape a string with special chars to not break CSS selectors. */\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t}\n\treturn ident;\n};\n\n/** Fix for Chrome below v61 formatting CSS floats with comma in some locales. */\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n","import Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = ['to-', 'is-changing', 'is-rendering', 'is-popstate', 'is-animating'];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector) as HTMLElement[];\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n","import Swup, { Options } from '../Swup.js';\nimport { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** An object holding details about the current visit. */\nexport interface Visit {\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string | undefined;\n\tfrom?: string;\n\thash?: string;\n\tanimate?: boolean;\n\tanimation?: string;\n\ttargets?: string[];\n\tel?: Element;\n\tevent?: Event;\n\taction?: HistoryAction;\n\tresetScroll?: boolean;\n}\n\n/** Create a new visit object. */\nexport function createVisit(\n\tthis: Swup,\n\t{\n\t\tto,\n\t\tfrom = this.currentPageUrl,\n\t\thash: target,\n\t\tanimate = true,\n\t\tanimation: name,\n\t\tel,\n\t\tevent,\n\t\taction = 'push',\n\t\tresetScroll: reset = true\n\t}: VisitInitOptions\n): Visit {\n\treturn {\n\t\tfrom: { url: from },\n\t\tto: { url: to },\n\t\tcontainers: this.options.containers,\n\t\tanimation: {\n\t\t\tanimate,\n\t\t\twait: false,\n\t\t\tname,\n\t\t\tscope: this.options.animationScope,\n\t\t\tselector: this.options.animationSelector\n\t\t},\n\t\ttrigger: {\n\t\t\tel,\n\t\t\tevent\n\t\t},\n\t\thistory: {\n\t\t\taction,\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t},\n\t\tscroll: {\n\t\t\treset,\n\t\t\ttarget\n\t\t}\n\t};\n}\n","import { DelegateEvent } from 'delegate-it';\n\nimport Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport { Visit } from './Visit.js';\nimport { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:end': undefined;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\n/** A hook handler. */\nexport type Handler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: Handler<T>\n) => Promise<any> | any;\n\nexport type Handlers = {\n\t[K in HookName]: Handler<K>[];\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<T extends HookName> = {\n\tid: number;\n\thook: T;\n\thandler: Handler<T>;\n\tdefaultHandler?: Handler<T>;\n} & HookOptions;\n\ntype HookLedger<T extends HookName> = Map<Handler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\ton<T extends HookName>(hook: T, handler: Handler<T>): HookUnregister;\n\ton<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions): HookUnregister;\n\ton<T extends HookName>(\n\t\thook: T,\n\t\thandler: Handler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\tbefore<T extends HookName>(hook: T, handler: Handler<T>): HookUnregister;\n\tbefore<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions): HookUnregister;\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: Handler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\treplace<T extends HookName>(hook: T, handler: Handler<T>): HookUnregister;\n\treplace<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions): HookUnregister;\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: Handler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\tonce<T extends HookName>(hook: T, handler: Handler<T>): HookUnregister;\n\tonce<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions): HookUnregister;\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: Handler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\toff<T extends HookName>(hook: T): void;\n\toff<T extends HookName>(hook: T, handler: Handler<T>): void;\n\toff<T extends HookName>(hook: T, handler?: Handler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targs?: HookArguments<T>,\n\t\tdefaultHandler?: Handler<T>\n\t): Promise<any> {\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, args);\n\t\tconst [result] = await this.run(handler, args);\n\t\tawait this.run(after, args);\n\t\tthis.dispatchDomEvent(hook, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targs?: HookArguments<T>,\n\t\tdefaultHandler?: Handler<T>\n\t): any {\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, args);\n\t\tconst [result] = this.runSync(handler, args);\n\t\tthis.runSync(after, args);\n\t\tthis.dispatchDomEvent(hook, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\tprotected async run<T extends HookName>(\n\t\tregistrations: HookRegistration<T>[],\n\t\targs?: HookArguments<T>\n\t): Promise<any> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tconst result = await runAsPromise(handler, [this.swup.visit, args, defaultHandler]);\n\t\t\tresults.push(result);\n\t\t\tif (once) {\n\t\t\t\tthis.off(hook, handler);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\tprotected runSync<T extends HookName>(\n\t\tregistrations: HookRegistration<T>[],\n\t\targs?: HookArguments<T>\n\t): any[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tconst result = handler(this.swup.visit, args as HookArguments<T>, defaultHandler);\n\t\t\tresults.push(result);\n\t\t\tif (isPromise(result)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Promise returned from handler for synchronous hook '${hook}'.` +\n\t\t\t\t\t\t`Swup will not wait for it to resolve.`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (once) {\n\t\t\t\tthis.off(hook, handler);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: Handler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst sort = this.sortRegistrations;\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).sort(sort);\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// This is an array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst replacingHandler = replace[index].handler;\n\t\t\t\tconst createDefaultHandler = (index: number): Handler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [\n\t\t\t\t\t{ id: 0, hook, handler: replacingHandler, defaultHandler: nestedDefaultHandler }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(hook: T, args?: HookArguments<T>): void {\n\t\tconst detail = { hook, args, visit: this.swup.visit };\n\t\tdocument.dispatchEvent(new CustomEvent(`swup:${hook}`, { detail }));\n\t}\n}\n","import { escapeCssIdentifier as escape, query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${escape(hash)}']`) ||\n\t\tquery(`a[name='${escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n","import { queryAll, toMs } from '../utils.js';\nimport Swup, { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\ntype AnimationProperties = 'Delay' | 'Duration';\ntype AnimationStyleKeys = `${AnimationTypes}${AnimationProperties}` | 'transitionProperty';\ntype AnimationStyleDeclarations = Pick<CSSStyleDeclaration, AnimationStyleKeys>;\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\telements,\n\t\tselector\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: Element): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(element: Element, expectedType?: AnimationTypes) {\n\tconst styles = window.getComputedStyle(element) as AnimationStyleDeclarations;\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: AnimationTypes | null = null;\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === TRANSITION) {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = TRANSITION;\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === ANIMATION) {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = ANIMATION;\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\t\tpropCount = type\n\t\t\t? type === TRANSITION\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction isTransitionOrAnimationEvent(event: any): event is TransitionEvent | AnimationEvent {\n\treturn [`${TRANSITION}end`, `${ANIMATION}end`].includes(event.type);\n}\n\nfunction getStyleProperties(styles: AnimationStyleDeclarations, key: AnimationStyleKeys): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n","import Swup from '../Swup.js';\nimport { createHistoryRecord, updateHistoryRecord, getCurrentUrl, Location } from '../helpers.js';\nimport { FetchOptions } from './fetchPage.js';\nimport { VisitInitOptions } from './Visit.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.href = url;\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\tthis.visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(to, options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\tconst { el } = this.visit.trigger;\n\tthis.visit.to.url = Location.fromUrl(url).url;\n\toptions.referrer = options.referrer || this.currentPageUrl;\n\n\tif (options.animate === false) {\n\t\tthis.visit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!this.visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || el?.getAttribute('data-swup-history') || undefined;\n\tif (history && ['push', 'replace'].includes(history)) {\n\t\tthis.visit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || el?.getAttribute('data-swup-animation') || undefined;\n\tif (animation) {\n\t\tthis.visit.animation.name = animation;\n\t}\n\n\ttry {\n\t\tawait this.hooks.call('visit:start');\n\n\t\t// Begin loading page\n\t\tconst pagePromise = this.hooks.call('page:load', { options }, async (visit, args) => {\n\t\t\tconst cachedPage = this.cache.get(visit.to.url!);\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url!, args.options));\n\t\t\targs.cache = !!cachedPage;\n\t\t\treturn args.page;\n\t\t});\n\n\t\t// Create history record if this is not a popstate call (with or without anchor)\n\t\tif (!this.visit.history.popstate) {\n\t\t\tconst newUrl = url + (this.visit.scroll.target || '');\n\t\t\tif (this.visit.history.action === 'replace') {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tconst index = this.currentHistoryIndex + 1;\n\t\t\t\tcreateHistoryRecord(newUrl, { index });\n\t\t\t}\n\t\t}\n\n\t\tthis.currentPageUrl = getCurrentUrl();\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (this.visit.animation.wait) {\n\t\t\tconst { html } = await pagePromise;\n\t\t\tthis.visit.to.html = html;\n\t\t}\n\n\t\t// Wait for page to load and leave animation to finish\n\t\tconst animationPromise = this.animatePageOut();\n\t\tconst [page] = await Promise.all([pagePromise, animationPromise]);\n\n\t\t// Render page: replace content and scroll to top/fragment\n\t\tawait this.renderPage(this.visit.to.url, page);\n\n\t\t// Wait for enter animation\n\t\tawait this.animatePageIn();\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', undefined, () => this.classes.clear());\n\n\t\t// Reset visit info after finish?\n\t\t// if (this.visit.to && this.isSameResolvedUrl(this.visit.to.url, requestedUrl)) {\n\t\t// \tthis.createVisit({ to: undefined });\n\t\t// }\n\t} catch (error: unknown) {\n\t\t// Return early if error is undefined (probably aborted preload request)\n\t\tif (!error) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Log to console as we swallow almost all hook errors\n\t\tconsole.error(error);\n\n\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.href = this.visit.to.url as string;\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.go(-1);\n\t}\n}\n","import Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends RequestInit {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The headers of the request: key/value object. */\n\theaders?: Record<string, string>;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus: number;\n\tconstructor(message: string, details: { url: string; status: number }) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\toptions = { ...options, headers };\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tconst response: Response = await this.hooks.call(\n\t\t'fetch:request',\n\t\t{ url, options },\n\t\t(visit, { url, options }) => fetch(url, options)\n\t);\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Only save cache entry for non-redirects\n\tif (url === finalUrl) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n","import Swup from '../Swup.js';\nimport { classify } from '../helpers.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup) {\n\tif (!this.visit.animation.animate) {\n\t\tawait this.hooks.call('animation:skip');\n\t\treturn;\n\t}\n\n\tawait this.hooks.call('animation:out:start', undefined, (visit) => {\n\t\tthis.classes.add('is-changing', 'is-leaving', 'is-animating');\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\t});\n\n\tawait this.hooks.call('animation:out:await', { skip: false }, async (visit, { skip }) => {\n\t\tif (skip) return;\n\t\tawait this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end');\n};\n","import Swup, { Options } from '../Swup.js';\nimport { PageData } from './fetchPage.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * It takes an object with the page data as returned from `fetchPage` and a list\n * of container selectors to replace.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (\n\tthis: Swup,\n\t{ html }: PageData,\n\t{ containers }: { containers: Options['containers'] } = this.options\n): boolean {\n\tconst incomingDocument = new DOMParser().parseFromString(html, 'text/html');\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Update content containers\n\tconst replaced = containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\treturn replaced.length === containers.length;\n};\n","import Swup from '../Swup.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = this.visit.scroll;\n\tlet scrolled = false;\n\n\tif (target) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\t{ hash: target, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash || '');\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n","import Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup) {\n\tif (!this.visit.animation.animate) {\n\t\treturn;\n\t}\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\t{ skip: false },\n\t\tasync (visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\tawait this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end');\n};\n","import { updateHistoryRecord, getCurrentUrl, classify } from '../helpers.js';\nimport Swup from '../Swup.js';\nimport { PageData } from './fetchPage.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n * @returns Promise<void>\n */\nexport const renderPage = async function (this: Swup, requestedUrl: string, page: PageData) {\n\tconst { url, html } = page;\n\n\tthis.classes.remove('is-leaving');\n\n\t// do nothing if another page was requested in the meantime\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), requestedUrl)) {\n\t\treturn;\n\t}\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tthis.visit.to.url = this.currentPageUrl;\n\t}\n\n\t// only add for animated page loads\n\tif (this.visit.animation.animate) {\n\t\tthis.classes.add('is-rendering');\n\t}\n\n\t// save html into visit context for easier retrieval\n\tthis.visit.to.html = html;\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', { page }, (visit, { page }) => {\n\t\tconst success = this.replaceContent(page, { containers: visit.containers });\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-animating', 'is-changing', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\tawait this.hooks.call('content:scroll', undefined, () => {\n\t\treturn this.scrollToContent();\n\t});\n\n\tawait this.hooks.call('page:view', { url: this.currentPageUrl, title: document.title });\n\n\t// empty cache if it's disabled (in case preload plugin filled it)\n\tif (!this.options.cache) {\n\t\tthis.cache.clear();\n\t}\n};\n","import Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore\n\treturn maybeInvalidPlugin?.isSwupPlugin;\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${pluginOrName}`\n\t);\n}\n","import Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n","import { DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { Visit, createVisit } from './modules/Visit.js';\nimport { Hooks } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: any) => boolean;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\tignoreVisit: (url, { el, event } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => event.state?.source !== 'swup'\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** URL of the currently visible page */\n\tcurrentPageUrl: string = getCurrentUrl();\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex = 1;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: any) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: undefined });\n\n\t\tif (!this.checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enable();\n\t}\n\n\tprotected checkRequirements() {\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Modify initial history record\n\t\tupdateHistoryRecord(null, { index: 1 });\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, () => {\n\t\t\t// Add swup-enabled class to html tag\n\t\t\tdocument.documentElement.classList.add('swup-enabled');\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, () => {\n\t\t\t// remove swup-enabled class from html tag\n\t\t\tdocument.documentElement.classList.remove('swup-enabled');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.call('link:newtab', { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', { el, event }, () => {\n\t\t\tconst from = this.visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page: with or without hash\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\tthis.hooks.callSync('link:anchor', { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.hooks.callSync('link:self', undefined, () => {\n\t\t\t\t\t\tthis.scrollToContent();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation(url);\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href = event.state?.url ?? location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { event })) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\t\tconst animate = this.options.animateHistoryBrowsing;\n\t\tconst resetScroll = this.options.animateHistoryBrowsing;\n\n\t\tthis.visit = this.createVisit({\n\t\t\tto: url,\n\t\t\thash,\n\t\t\tevent,\n\t\t\tanimate,\n\t\t\tresetScroll\n\t\t});\n\n\t\t// Mark as popstate visit\n\t\tthis.visit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = Number(event.state?.index);\n\t\tif (index) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tthis.visit.history.direction = direction;\n\t\t}\n\n\t\t// Does this even do anything?\n\t\t// if (!hash) {\n\t\t// \tevent.preventDefault();\n\t\t// }\n\n\t\tthis.hooks.callSync('history:popstate', { event }, () => {\n\t\t\tthis.performNavigation(url);\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","_temp","hash","location","pathname","search","createHistoryRecord","url","customData","data","random","Math","source","history","pushState","updateHistoryRecord","state","replaceState","delegateEvent","selector","type","callback","options","controller","AbortController","signal","delegate","destroy","abort","Location","URL","constructor","base","document","baseURI","super","toString","this","fromElement","el","href","getAttribute","fromUrl","matchPath","path","match","error","Error","Cache","swup","pages","Map","size","all","copy","forEach","page","key","set","has","resolve","get","result","hooks","callSync","update","payload","delete","clear","prune","predicate","urlToResolve","resolveUrl","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","Promise","requestAnimationFrame","isPromise","obj","then","runAsPromise","func","args","reject","forceReflow","element","body","offsetHeight","escapeCssIdentifier","ident","window","CSS","escape","toMs","s","Number","slice","Classes","swupClasses","selectors","scope","visit","animation","containers","isArray","join","targets","trim","add","target","classList","call","arguments","remove","className","split","filter","c","isSwupClass","some","startsWith","createVisit","_ref","to","currentPageUrl","animate","name","event","action","resetScroll","reset","wait","animationScope","animationSelector","trigger","popstate","direction","undefined","scroll","pact","value","_Pact","o","_settle","bind","v","observer","onFulfilled","onRejected","e","_this","_isSettledPact","thenable","Hooks","registry","init","hook","create","exists","ledger","console","on","handler","warn","id","registration","off","before","once","defaultHandler","after","getHandlers","run","dispatchDomEvent","runSync","registrations","_this2","results","check","_iteratorSymbol","step","iterator","_cycle","next","done","return","_fixup","TypeError","values","i","length","push","array","_forTo","_forOf","_ref2","found","replaced","sort","sortRegistrations","_ref3","_ref4","_ref5","index","createDefaultHandler","a","b","priority","dispatchEvent","CustomEvent","detail","getAnchorElement","charAt","substring","decoded","decodeURIComponent","getElementById","awaitAnimations","elements","animatedElements","awaitedAnimations","map","timeout","propCount","expectedType","styles","getComputedStyle","transitionDelays","getStyleProperties","TRANSITION","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","includes","isTransitionOrAnimationEvent","elapsedTime","setTimeout","addEventListener","awaitAnimationsOnElement","Boolean","delays","durations","concat","duration","performNavigation","referrer","classes","_temp2","animationPromise","animatePageOut","pagePromise","renderPage","animatePageIn","_temp3","_this$fetchPage","cache","cachedPage","fetchPage","newUrl","currentHistoryIndex","html","_catch","skipPopStateHandling","go","navigate","shouldIgnoreVisit","headers","requestHeaders","fetch","response","status","responseUrl","FetchError","finalUrl","message","details","_exit","_result","skip","replaceContent","incomingDocument","DOMParser","parseFromString","title","innerText","currentEl","incomingEl","replaceWith","scrollToContent","behavior","scrolled","anchor","scrollIntoView","scrollTo","top","left","requestedUrl","isSameResolvedUrl","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","url1","url2","defaults","animateHistoryBrowsing","ignoreVisit","closest","linkSelector","Accept","Swup","version","clickDelegate","log","handleLinkClick","handlePopState","checkRequirements","enable","documentElement","origin","triggerWillOpenNewWindow","delegateTarget","metaKey","ctrlKey","shiftKey","altKey","button","preventDefault","triggerEl","matches"],"mappings":"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"}